{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset129 NanumMyeongjo;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red106\green62\blue62;\red42\green0\blue255;
\red0\green0\blue192;\red0\green128\blue128;\red63\green127\blue127;\red63\green95\blue191;\red127\green159\blue191;
\red100\green100\blue100;\red63\green127\blue95;\red100\green100\blue100;\red242\green242\blue242;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c16471\c0\c100000;
\csgenericrgb\c0\c0\c75294;\csgenericrgb\c0\c50196\c50196;\csgenericrgb\c24706\c49804\c49804;\csgenericrgb\c24706\c37255\c74902;\csgenericrgb\c49804\c62353\c74902;
\csgenericrgb\c39216\c39216\c39216;\csgenericrgb\c24706\c49804\c37255;\cssrgb\c46667\c46667\c46667;\cssrgb\c96078\c96078\c96078;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12300\viewh17420\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 34\'c0\'cf\'c2\'f7(cho)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** Maven\
\
- \'bf\'dc\'ba\'ce \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae \'b0\'fc\'b8\'ae\'bf\'cd \'ba\'f4\'b5\'e5\'b8\'a6 \'bc\'f6\'c7\'e0\'c7\'d8\'c1\'d6\'b4\'c2 \'b5\'b5\'b1\'b8\
- pom.xml \'c0\'cc\'b6\'f3\'b4\'c2 \'c6\'c4\'c0\'cf\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'b0\'fc\'b8\'ae\
\
1. repositories : \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b8\'a6 \'c1\'f7\'c1\'a2 \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'bb URL\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'b4\'c2 \'c5\'c2\'b1\'d7\'b7\'ce \'c0\'db\'bc\'ba\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'c1\'df\'be\'d3 \'c0\'fa\'c0\'e5\'bc\'d2\'bf\'a1\'bc\'ad \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5\
\
2. dependencies : \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'be\'c6\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b4\'c2 \'c5\'c2\'b1\'d7\
\'bf\'a9\'b1\'e2\'bf\'a1 \'c0\'db\'bc\'ba\'c7\'cf\'b8\'e9 \'b8\'d5\'c0\'fa \'b7\'ce\'c4\'c3\'bf\'a1 \'c0\'d6\'b4\'c2 .m2\'b6\'f3\'b4\'c2 \'b5\'f0\'b7\'ba\'c5\'e4\'b8\'ae\'bf\'a1\'bc\'ad \'c3\'a3\'be\'c6\'ba\'b8\'b0\'ed \'c0\'d6\'c0\'b8\'b8\'e9 \'bb\'e7\'bf\'eb\'c7\'cf\'b0\'ed\
\'be\'f8\'c0\'b8\'b8\'e9 \'c1\'df\'be\'d3\'c0\'fa\'c0\'e5\'bc\'d2\'b3\'aa repositories \'c5\'c2\'b1\'d7\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c8 \'b0\'f7\'bf\'a1\'bc\'ad \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'be\'c6\'bc\'ad .m2\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed \'bb\'e7\'bf\'eb\
\
=> \'c0\'cc\'c5\'ac\'b8\'b3\'bd\'ba\'bf\'a1\'bc\'ad\'b4\'c2 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd Maven\'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'b0\'ed \'b1\'e2\'c1\'b8 \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 Maven \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b7\'ce\
\'ba\'af\'c8\'af\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
\
=> \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'ba\'af\'c8\'af\'c7\'d2 \'b6\'a7\'b4\'c2 \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca \'c5\'ac\'b8\'af\'c7\'d8\'bc\'ad [Configure] - [Convert to Maven Project]\
\
3. MySQL \'b5\'e5\'b6\'f3\'c0\'cc\'b9\'f6 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'b7\'ce\'b5\'e5\'c7\'cf\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'bb\'fd\'bc\'ba\
\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.externallibrary;\
\cf2 public\cf0  \cf2 class\cf0  MySQLLoad \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf2 try\cf0  \{\
			Class.forName(\cf4 "com.mysql.jdbc.Driver"\cf0 );\
			System.\cf5 out\cf0 .printf(\cf4 "\'b5\'e5\'b6\'f3\'c0\'cc\'b9\'f6 \'c5\'ac\'b7\'a1\'bd\'ba \'b7\'ce\'b5\'e5 \'bc\'ba\'b0\'f8\\n"\cf0 );\
		\}\cf2 catch\cf0 (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
4. \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 Maven \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b7\'ce \'ba\'af\'c8\'af\
\
5. pom.xml \'c6\'c4\'c0\'cf\'bf\'a1 Dependency\'b8\'a6 \'bc\'b3\'c1\'a4\
\
- www.mvnrepository.com\'bf\'a1 \'c1\'a2\'bc\'d3\'c7\'d8\'bc\'ad mysql -> 5.1.48 Click\'c7\'cf\'b8\'e9 Maven\'c4\'da\'b5\'e5 \'ba\'b9\'bb\'e7\
\pard\pardeftab720\partightenfactor0
\cf0   \cf6 <\cf7 dependencies\cf6 >\cf0 \
  	\cf8 <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\cf0 \
	\cf6 <\cf7 dependency\cf6 >\cf0 \
     \cf6 <\cf7 groupId\cf6 >\cf0 mysql\cf6 </\cf7 groupId\cf6 >\cf0 \
   	 \cf6 <\cf7 artifactId\cf6 >\cf0 mysql-connector-java\cf6 </\cf7 artifactId\cf6 >\cf0 \
     \cf6 <\cf7 version\cf6 >\cf0 5.1.48\cf6 </\cf7 version\cf6 >\cf0 \
	\cf6 </\cf7 dependency\cf6 >\cf0 \
  \cf6 </\cf7 dependencies\cf6 >\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
6. \'c7\'c3\'b7\'af\'b1\'d7\'c0\'ce \'bf\'c0\'b7\'f9 \'b3\'aa\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'be\'c6\'b7\'a1 \'c4\'da\'b5\'e5\'b8\'a6 \'c3\'df\'b0\'a1\
\
\pard\pardeftab720\partightenfactor0
\cf0 	\cf6 <\cf7 dependency\cf6 >\cf0 \
		\cf6 <\cf7 groupId\cf6 >\cf0 org.apache.maven.plugins\cf6 </\cf7 groupId\cf6 >\cf0 \
		\cf6 <\cf7 artifactId\cf6 >\cf0 maven-resources-plugin\cf6 </\cf7 artifactId\cf6 >\cf0 \
		\cf6 <\cf7 version\cf6 >\cf0 2.4.3\cf6 </\cf7 version\cf6 >\cf0 \
	\cf6 </\cf7 dependency\cf6 >\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
7. \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'bb \'c5\'ac\'b8\'af\'c7\'cf\'b0\'ed [Run As] - [Maven Install]\
\
8. \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed [\'bb\'f5\'b7\'ce\'b0\'ed\'c4\'a7 - F5]\
\
9. \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'bb \'c5\'ac\'b8\'af\'c7\'cf\'b0\'ed [Maven] - [Update Project]\
\
** \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5\'b0\'a1 \'be\'c8\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec \'b4\'d9\'b8\'a5 \'c4\'c4\'c7\'bb\'c5\'cd\'bf\'a1\'bc\'ad \'ba\'b9\'bb\'e7\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\
\
- \'bb\'e7\'bf\'eb\'c0\'da\'b0\'e8\'c1\'a4/.m2 \'b5\'f0\'b7\'ba\'c5\'e4\'b8\'ae\'bf\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- Mac\'bf\'a1\'bc\'ad\'b4\'c2 \'bc\'fb\'b1\'e8\'c6\'c4\'c0\'cf\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'c1\'ae \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce Command + Shift + . \'c0\'bb \'b4\'ad\'b7\'af\'bc\'ad \'bc\'fb\'b1\'e8\'c6\'c4\'c0\'cf\'c0\'bb \'ba\'b8\'c0\'cc\'b5\'b5\'b7\'cf \'c7\'cf\'b0\'ed \'ba\'b9\'bb\'e7\
\
** Maven \'b8\'ed\'b7\'c9 - \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca \'c5\'ac\'b8\'af\'c7\'cf\'b0\'ed [Run As]\
\
1. Maven Build : \'ba\'f4\'b5\'e5\'b8\'a6 \'bc\'f6\'c7\'e0\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 2. Maven Install : \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'bb \'bd\'c7\'c7\'e0 \'b0\'a1\'b4\'c9\'c7\'d1 \'bb\'f3\'c5\'c2\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'b4\'d9\'b8\'a5 \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'cc \'c2\'fc\'c1\'b6\'c7\'d2 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'c7\'d8\'c1\'d6\'b4\'c2 \'b0\'cd\
\
3. Maven Clean : \'c0\'cc\'c0\'fc\'bf\'a1 \'ba\'f4\'b5\'e5\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'bb \'bb\'e8\'c1\'a6\
\
- \'bd\'c7\'b9\'ab \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'c7\'d2 \'b6\'a7\'b4\'c2 Build \'b3\'aa Install \'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 Maven Clean\'c0\'bb \'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
** \'c1\'df\'be\'d3 \'c0\'fa\'c0\'e5\'bc\'d2\'bf\'a1 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b0\'a1 \'be\'f8\'b4\'c2 \'b0\'e6\'bf\'ec\
\
- \'c0\'cc\'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 repositories\'bf\'a1 repository\'b6\'f3\'b4\'c2 \'c5\'c2\'b1\'d7\'b8\'a6 \'c3\'df\'b0\'a1\'c7\'d8\'bc\'ad \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'bb URL\'c0\'bb \'c1\'f7\'c1\'a2 \'bc\'b3\'c1\'a4\'c7\'d8 \'c1\'d6\'be\'ee\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
- \'bd\'c7\'b9\'ab \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'bf\'a1\'bc\'ad\'b4\'c2 \'b4\'eb\'ba\'ce\'ba\'d0 \'c0\'fa\'c0\'e5\'bc\'d2\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- \'b4\'eb\'b1\'e2\'be\'f7\'c0\'cc\'b3\'aa \'b0\'f8\'b0\'f8\'b1\'e2\'b0\'fc\'c0\'ba \'bf\'c0\'c7\'c2\'bc\'d2\'bd\'ba\'b6\'f3 \'c7\'cf\'b4\'f5\'b6\'f3\'b5\'b5 \'b9\'ab\'c1\'b6\'b0\'c7 \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\
- WAS(Web Application Server) \'c1\'df\'bf\'a1\'bc\'ad Tomcat\'c0\'ba \'bf\'c0\'c7\'c2\'bc\'d2\'bd\'ba\'c0\'cc\'b0\'ed \'c6\'bc\'b8\'c6\'bd\'ba\'c0\'c7 \'c1\'a6\'bf\'ec\'bd\'ba\'b4\'c2 \'bb\'f3\'bf\'eb\'c8\'ad \'b5\'c7\'be\'ee \'c0\'d6\'b4\'c2 \'c1\'a6\'c7\'b0\'c0\'d4\'b4\'cf\'b4\'d9.\
- \'b0\'f8\'b0\'f8\'b1\'e2\'b0\'fc\'c0\'ba Tomcat\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed \'c6\'bc\'b8\'c6\'bd\'ba\'c0\'c7 \'c1\'a6\'bf\'ec\'bd\'ba\'b8\'a6 \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
- \'bf\'c0\'c7\'c2\'bc\'d2\'bd\'ba\'b4\'c2 \'c0\'af\'c1\'f6\'ba\'b8\'bc\'f6\'b8\'a6 \'c1\'f7\'c1\'a2 \'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
** JavaDoc\
\
- \'c0\'da\'b9\'d9 \'b9\'ae\'bc\'ad\'b8\'a6 \'b8\'b8\'b5\'e9\'be\'ee\'c1\'d6\'b4\'c2 \'b1\'e2\'b4\'c9\
- \'b9\'ae\'bc\'ad\'b7\'ce \'b8\'b8\'b5\'e9\'b0\'ed\'c0\'da \'c7\'cf\'b4\'c2 \'b3\'bb\'bf\'eb\'c0\'ba  /** \'b3\'bb\'bf\'eb */ \'b1\'e2\'bc\'fa\
- \'b9\'ae\'bc\'ad \'bb\'fd\'bc\'ba\'c0\'ba [project] - [generate javadoc]\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.externallibrary;\
\cf8 /**\cf0 \
\cf8  * \cf0 \
\cf8  * \cf9 @author\cf8  \'c1\'b6<br/>\'c3\'a2\'c8\'c6\cf0 \
\cf8  * \ul Maven\ulnone \'c0\'b8\'b7\'ce MySQL \'b5\'e5\'b6\'f3\'c0\'cc\'b9\'f6\'b8\'a6 \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'b4\'c2 \'bf\'ac\'bd\'c0\cf0 \
\cf8  * \cf0 \
\cf8  */\cf0 \
\cf2 public\cf0  \cf2 class\cf0  MySQLLoad \{\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf2 try\cf0  \{\
			Class.forName(\cf4 "com.mysql.jdbc.Driver"\cf0 );\
			System.\cf5 out\cf0 .printf(\cf4 "\'b5\'e5\'b6\'f3\'c0\'cc\'b9\'f6 \'c5\'ac\'b7\'a1\'bd\'ba \'b7\'ce\'b5\'e5 \'bc\'ba\'b0\'f8\\n"\cf0 );\
		\}\cf2 catch\cf0 (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** Checkstyle, FindBugs(SpotBugs)\
\
- Checkstyle\'c0\'ba \'c4\'da\'b5\'f9\'c0\'bb \'c7\'d2 \'b6\'a7 \'c0\'cc\'bb\'f3\'c7\'d1 \'c4\'da\'b5\'e5\'b0\'a1 \'be\'f8\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'d8\'c1\'d6\'b4\'c2 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\
- FindBugs\'b4\'c2 \'c0\'da\'c1\'d6 \'b9\'df\'bb\'fd\'c7\'cf\'b4\'c2 \'bf\'a1\'b7\'af\'b8\'a6 \'c3\'bc\'c5\'a9\'c7\'d8\'c1\'d6\'b4\'c2 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\
\
1. \'bc\'b3\'c4\'a1\
\
- Eclipse\'c0\'c7 MarketPlace\'bf\'a1\'bc\'ad \'c7\'c3\'b7\'af\'b1\'d7 \'c0\'ce \'c7\'fc\'c5\'c2\'b7\'ce \'bc\'b3\'c4\'a1\
- [Help] - [Eclipse MarketPlace]\'b8\'a6 \'bd\'c7\'c7\'e0\'c7\'cf\'b0\'ed Checkstyle\'c0\'bb \'b0\'cb\'bb\'f6\
\
2. \'bb\'e7\'bf\'eb\
\
- \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'bb \'c5\'ac\'b8\'af\'c7\'d8\'bc\'ad [Properties]\'b8\'a6 \'bd\'c7\'c7\'e0\
- \'bf\'de\'c2\'ca \'c3\'a2\'bf\'a1\'bc\'ad checkstyle\'c0\'bb \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed \'bf\'c0\'b8\'a5\'c2\'ca \'c3\'a2\'bf\'a1 \'bb\'fd\'b1\'e4 Checkstyle\'bf\'a1\'bc\'ad \'bf\'de\'c2\'ca \'b5\'ce\'b0\'b3 \'c3\'bc\'c5\'a9\'c7\'cf\'b0\'ed Apply and Close\
\
** JUnit\
\
- \'b4\'dc\'c0\'a7 \'c5\'d7\'bd\'ba\'c6\'ae\'b8\'a6 \'c0\'a7\'c7\'d1 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\
- TDD(Test Driven Development - \'c5\'d7\'bd\'ba\'c6\'ae \'c1\'d6\'b5\'b5 \'b0\'b3\'b9\'df)\
- \'bf\'b9\'c0\'fc\'bf\'a1\'b4\'c2 \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'bb \'bf\'cf\'bc\'ba\'c7\'cf\'b0\'ed \'c5\'d7\'bd\'ba\'c6\'ae\'b8\'a6 \'c7\'df\'c1\'f6\'b8\'b8 \'c1\'f6\'b1\'dd\'c0\'ba \'c5\'d7\'bd\'ba\'c6\'ae \'c7\'cf\'b8\'e9\'bc\'ad \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'bb \'b8\'b8\'b5\'e5\'b4\'c2 \'b0\'cd\'c0\'bb \'b1\'c7\'c0\'e5\
\
1. JUnit \'bc\'b3\'c4\'a1\
\
- \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca \'c5\'ac\'b8\'af\'c7\'d8\'bc\'ad [Properties]\'b8\'a6 \'c5\'ac\'b8\'af\
- Java Build Path\'bf\'a1\'bc\'ad Library\'c5\'c7\'c0\'bb \'bc\'b1\'c5\'c3\'c7\'cf\'b0\'ed [Add Library] \'b9\'f6\'c6\'b0\'c0\'bb \'c5\'ac\'b8\'af\
- JUnit\'c0\'bb \'bc\'b1\'c5\'c3\
\
2. \'c5\'d7\'bd\'ba\'c6\'ae \'b9\'e6\'b9\'fd\
\
1) TestCase \'c5\'ac\'b7\'a1\'bd\'ba\'b7\'ce\'ba\'ce\'c5\'cd \'bb\'f3\'bc\'d3\'b9\'de\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\
\
- \'b3\'bb\'ba\'ce\'bf\'a1 \'b8\'b8\'b5\'e7 \'b8\'f0\'b5\'e7 \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'bd\'c7\'c7\'e0\'bd\'c3\'c4\'d1\'bc\'ad \'c5\'d7\'bd\'ba\'c6\'ae \'c7\'d5\'b4\'cf\'b4\'d9.\
\
2) \'c5\'d7\'bd\'ba\'c6\'ae \'c7\'cf\'b0\'ed\'c0\'da \'c7\'cf\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5 \'c0\'a7\'bf\'a1 @Test\'b6\'f3\'b4\'c2 \'be\'ee\'b3\'eb\'c5\'d7\'c0\'cc\'bc\'c7\'c0\'bb \'c3\'df\'b0\'a1\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\
\
- @Test\'b0\'a1 \'ba\'d9\'c0\'ba \'b8\'de\'bc\'d2\'b5\'e5\'b8\'b8 \'bd\'c7\'c7\'e0\'c7\'d8\'bc\'ad \'c5\'d7\'bd\'ba\'c6\'ae\
\
3. Assert.assertEquals \'b3\'aa assertThat \'c0\'cc\'b6\'f3\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5\'bf\'a1 \'c3\'b9\'b9\'f8\'c2\'b0 \'b8\'c5\'b0\'b3\'ba\'af\'bc\'f6\'b7\'ce \'b8\'de\'bc\'d2\'b5\'e5\'c0\'c7 \'bc\'f6\'c7\'e0\'b0\'e1\'b0\'fa\'b8\'a6 \'b4\'eb\'c0\'d4\'c7\'cf\'b0\'ed\
\'b5\'ce\'b9\'f8\'c2\'b0 \'b8\'c5\'b0\'b3\'ba\'af\'bc\'f6\'b7\'ce \'b1\'e2\'b4\'eb\'b0\'aa\'c0\'bb \'b4\'eb\'c0\'d4\'c7\'cf\'b8\'e9 \'be\'e7\'c2\'ca\'c0\'c7 \'b0\'aa\'c0\'cc \'b0\'b0\'c0\'ba \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 AssertionError\'b6\'f3\'b4\'c2 \'bf\'b9\'bf\'dc\'b0\'a1 \'b9\'df\'bb\'fd\
\
4. \'c5\'d7\'bd\'ba\'c6\'ae \'bc\'f6\'c7\'e0\'c0\'bb \'c7\'d2 \'b8\'de\'bc\'d2\'b5\'e5\'b0\'a1 \'c0\'d6\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba \'bb\'fd\'bc\'ba\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.externallibrary;\
\cf2 public\cf0  \cf2 class\cf0  Sample \{\
	\cf2 public\cf0  \cf2 int\cf0  add(\cf2 int\cf0  \cf3 n1\cf0 , \cf2 int\cf0  \cf3 n2\cf0 ) \{\
		\cf2 return\cf0  \cf3 n1\cf0  + \cf3 n2\cf0 ;\
	\}\
	\cf2 public\cf0  \cf2 int\cf0  minus(\cf2 int\cf0  \cf3 n1\cf0 , \cf2 int\cf0  \cf3 n2\cf0 ) \{\
		\cf2 return\cf0  \cf3 n1\cf0  - \cf3 n2\cf0 ;\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
5. \'c5\'d7\'bd\'ba\'c6\'ae \'c5\'ac\'b7\'a1\'bd\'ba \'b8\'b8\'b5\'e9\'b1\'e2\
\
- TestCase\'b7\'ce \'ba\'ce\'c5\'cd \'bb\'f3\'bc\'d3\'b9\'de\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba \'bb\'fd\'bc\'ba\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.externallibrary;\
\cf2 import\cf0  junit.framework.TestCase;\
\cf2 public\cf0  \cf2 class\cf0  SampleTest \cf2 extends\cf0  TestCase \{\
	\cf2 public\cf0  \cf2 void\cf0  test1() \{\
		System.\cf5 out\cf0 .printf(\cf4 "\'b5\'a1\'bc\'c0 : %d\\n"\cf0 , \cf2 new\cf0  Sample().add(100, 300));\
	\}\
	\cf2 public\cf0  \cf2 void\cf0  test2() \{\
		System.\cf5 out\cf0 .printf(\cf4 "\'bb\'ac\'bc\'c0 : %d\\n"\cf0 , \cf2 new\cf0  Sample().minus(100, 300));\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'b5\'a1\'bc\'c0 : 400\
\'bb\'ac\'bc\'c0 : -200\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
6. \'c0\'cf\'b9\'dd \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'b8\'b8\'b5\'e9\'b0\'ed \'c5\'d7\'bd\'ba\'c6\'ae\
\
- \'c5\'d7\'bd\'ba\'c6\'ae\'c7\'cf\'b0\'ed\'c0\'da \'c7\'cf\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5 \'c0\'a7\'bf\'a1 @Test\'b6\'f3\'b4\'c2 \'be\'ee\'b3\'eb\'c5\'d7\'c0\'cc\'bc\'c7\'c0\'bb \'c3\'df\'b0\'a1\'c7\'cf\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9.\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.externallibrary;\
\cf2 import\cf0  org.junit.Test;\
\cf2 public\cf0  \cf2 class\cf0  GenericTestClass \{\
	\cf10 @Test\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  test1() \{\
		System.\cf5 out\cf0 .printf(\cf4 "\'b5\'a1\'bc\'c0 : %d\\n"\cf0 , \cf2 new\cf0  Sample().add(100, 300));\
	\}\
	\cf11 // @Test\'b0\'a1 \'be\'f8\'be\'ee\'bc\'ad \'bc\'f6\'c7\'e0\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  test2() \{\
		System.\cf5 out\cf0 .printf(\cf4 "\'bb\'ac\'bc\'c0 : %d\\n"\cf0 , \cf2 new\cf0  Sample().minus(100, 300));\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\'b5\'a1\'bc\'c0 : 400\
\
7. \'c5\'d7\'bd\'ba\'c6\'ae\'b8\'a6 \'bd\'c7\'c7\'e0\
\
- \'b8\'b6\'bf\'ec\'bd\'ba \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'bb \'c5\'ac\'b8\'af\'c7\'cf\'b0\'ed [Run As] - [JUnit test]\
- TestCase\'b7\'ce \'ba\'ce\'c5\'cd \'bb\'f3\'bc\'d3\'b9\'de\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'cf\'b8\'e9 \'b8\'f0\'b5\'e7 \'b8\'de\'bc\'d2\'b5\'e5\'b0\'a1 \'b4\'d9 \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\
\
8. test1 \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'bc\'f6\'c1\'a4\
\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.externallibrary;\
\cf2 import\cf0  org.junit.Test;\
\cf2 import\cf0  junit.framework.Assert;\
\cf2 public\cf0  \cf2 class\cf0  GenericTestClass \{\
	\cf10 @Test\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  test1() \{\
		\cf11 // \'b8\'de\'bc\'d2\'b5\'e5\'c0\'c7 \'bc\'f6\'c7\'e0\'b0\'e1\'b0\'fa\'b0\'a1 400\'c0\'cc\'b8\'e9 \'b8\'de\'bd\'c3\'c1\'f6\'b0\'a1 \'be\'f8\'c0\'bd, \'b8\'de\'bc\'d2\'b5\'e5\'c0\'c7 \'bc\'f6\'c7\'e0\'b0\'e1\'b0\'fa\'b0\'a1 400\'c0\'cc \'be\'c6\'b4\'cf\'b8\'e9 \'bf\'b9\'bf\'dc\'b0\'a1 \'b9\'df\'bb\'fd\cf0 \
		Assert.assertEquals(\cf2 new\cf0  Sample().add(100, 300), 400);\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
9. \'bf\'a1\'b7\'af\
\
1) \'b9\'b0\'b8\'ae\'c0\'fb \'bf\'c0\'b7\'f9 : \'b9\'ae\'b9\'fd\'c0\'cc \'b8\'c2\'c1\'f6 \'be\'ca\'b0\'d4 \'c4\'da\'b5\'e5\'b8\'a6 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'bd\'c7\'c7\'e0\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'b0\'e6\'bf\'ec\
=> \'c0\'cc \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'c4\'da\'b5\'e5\'b8\'a6 \'bc\'f6\'c1\'a4\'c7\'d8\'bc\'ad \'b9\'ae\'b9\'fd\'bf\'a1 \'b8\'c2\'b0\'d4 \'b8\'b8\'b5\'e9\'be\'ee\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
2) \'b3\'ed\'b8\'ae\'c0\'fb \'bf\'c0\'b7\'f9 : \'b9\'ae\'b9\'fd\'bf\'a1 \'b8\'c2\'b0\'d4 \'c0\'db\'bc\'ba\'c0\'cc \'b5\'c7\'bc\'ad \'bd\'c7\'c7\'e0\'c0\'ba \'b5\'c7\'c1\'f6\'b8\'b8 \'b0\'e1\'b0\'fa\'b0\'a1 \'c0\'df\'b8\'f8\'b3\'aa\'bf\'c0\'b4\'c2 \'b0\'e6\'bf\'ec\
=> \'c0\'cc \'b0\'e6\'bf\'ec\'b5\'b5 \'c4\'da\'b5\'e5\'b8\'a6 \'bc\'f6\'c1\'a4\'c7\'d8\'be\'df \'c7\'cf\'c1\'f6\'b8\'b8 \'b8\'d5\'c0\'fa \'b5\'f0\'b9\'f6\'b1\'eb\'c0\'bb \'c7\'d8\'bc\'ad \'c0\'df\'b8\'f8\'b5\'c8 \'c4\'da\'b5\'e5\'b8\'a6 \'c3\'a3\'be\'c6\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
3) \'bf\'b9\'bf\'dc(Exception) : \'b9\'ae\'b9\'fd\'bf\'a1 \'b8\'c2\'b0\'d4 \'c0\'db\'bc\'ba\'b5\'c7\'bc\'ad \'bd\'c7\'c7\'e0\'c0\'ba \'b5\'c7\'c1\'f6\'b8\'b8 \'bd\'c7\'c7\'e0 \'b5\'b5\'c1\'df \'b9\'ae\'c1\'a6\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d8\'bc\'ad \'bd\'c7\'c7\'e0\'c0\'cc \'c1\'df\'b4\'dc\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec\
=> \'c0\'cc\'b0\'e6\'bf\'ec\'bf\'a1\'b5\'b5 \'bf\'b9\'bf\'dc\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d1 \'c1\'f6\'c1\'a1\'c0\'bb \'c3\'a3\'b0\'ed \'b5\'f0\'b9\'f6\'b1\'eb\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d8\'bc\'ad \'c4\'da\'b5\'e5\'b8\'a6 \'bc\'f6\'c1\'a4\'c7\'cf\'b0\'c5\'b3\'aa \'bf\'b9\'bf\'dc\'c3\'b3\'b8\'ae\'b8\'a6 \'c7\'d8\'bc\'ad \'c7\'d8\'b0\'e1\
 \
4) \'b4\'dc\'be\'f0(Assertion) : \'c4\'da\'b5\'e5\'b0\'a1 \'c1\'a4\'bb\'f3\'c0\'fb\'c0\'b8\'b7\'ce \'b5\'bf\'c0\'db\'c0\'bb \'c7\'cf\'b4\'c2\'b5\'a5 \'c1\'b6\'b0\'c7\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d8\'bc\'ad \'b0\'ad\'c1\'a6\'b7\'ce \'bf\'b9\'bf\'dc\'b8\'a6 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b0\'b4\'c2 \'b0\'cd\'c0\'b8\'b7\'ce\
\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'cc \'bd\'c7\'c7\'e0\'b5\'c7\'b8\'e9 \'be\'c8\'b5\'c7\'b4\'c2 \'c1\'b6\'b0\'c7\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'b0\'ad\'c1\'a6\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb \'c1\'be\'b7\'e1\'bd\'c3\'c5\'b0\'b0\'ed\'c0\'da \'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
=> \'c7\'d8\'c5\'b7\'c0\'cc \'b9\'df\'bb\'fd\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'c6\'f7\'c6\'ae\'b0\'a1 \'bf\'ad\'b7\'c1 \'c0\'d6\'b4\'d9\'b8\'e9 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'ba \'c1\'be\'b7\'e1\'b5\'c7\'be\'ee\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
=> \'bf\'ee\'bf\'b5\'c3\'bc\'c1\'a6 \'b9\'f6\'c0\'fc\'c0\'cc \'b8\'c2\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb \'bd\'c7\'c7\'e0\'bd\'c3\'c5\'b3 \'bc\'f6 \'be\'f8\'b5\'b5\'b7\'cf \'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\
** \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c7\'a5\'c7\'f6\
\
1. \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c1\'be\'b7\'f9\
\
1) HTML(Hyper Text Markup Language)\
\
- html\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'a5 \'ba\'ea\'b6\'f3\'bf\'ec\'c0\'fa\'bf\'a1 \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d1 \'c7\'fc\'bd\'c4\'c0\'b8\'b7\'ce \'c5\'c2\'b1\'d7\'b4\'c2 \'c0\'cc\'b9\'cc \'b1\'e2\'b4\'c9\'c0\'cc \'c1\'a4\'c7\'d8\'c1\'ae \'c0\'d6\'be\'ee\'bc\'ad \'bf\'ec\'b8\'ae\'b0\'a1 \'bf\'f8\'c7\'cf\'b4\'c2 \'b4\'eb\'b7\'ce\
\'c6\'ed\'c1\'fd\'c7\'d2 \'bc\'f6 \'be\'f8\'be\'ee\'bc\'ad  \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce \'c3\'eb\'b1\'de\'c7\'cf\'c1\'f6 \'be\'ca\'be\'d2\'b4\'c2\'b5\'a5 \'c3\'d6\'b1\'d9\'bf\'a1\'b4\'c2 html\'b5\'b5 \'c7\'cf\'b3\'aa\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce \'c3\'eb\'b1\'de\
- \'c0\'a5\'ba\'ea\'b6\'f3\'bf\'ec\'c0\'fa\'bf\'a1\'bc\'ad\'b8\'b8 \'ba\'bc\'bc\'f6 \'c0\'d6\'b0\'ed, \'bc\'f6\'c1\'a4\'c0\'cc \'ba\'d2\'b0\'a1\
\
2) CSV(Comma Separated Values)\
\
- \'c4\'de\'b8\'b6\'b7\'ce \'b1\'b8\'ba\'d0\'c7\'d1 \'b9\'ae\'c0\'da\'bf\'ad \'b5\'a5\'c0\'cc\'c5\'cd\
- \'c3\'d6\'b1\'d9\'bf\'a1\'b4\'c2 \'c4\'de\'b8\'b6 \'bb\'d3 \'be\'c6\'b4\'cf\'b6\'f3 \'b0\'f8\'b9\'e9 \'b6\'c7\'b4\'c2 Enter, Tab\'b5\'ee\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2\'b5\'b5 \'c7\'d5\'b4\'cf\'b4\'d9.\
- \'ba\'af\'c7\'cf\'c1\'f6 \'be\'ca\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b0\'ed\'c0\'da \'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\
\
3) XML(eXtensible Markup Language)\
\
- \'c5\'c2\'b1\'d7\'c0\'c7 \'b1\'e2\'b4\'c9\'c0\'bb \'bf\'f8\'c7\'cf\'b4\'c2 \'b4\'eb\'b7\'ce \'b8\'b8\'b5\'e9 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'c7\'d8\'c1\'d6\'b4\'c2 \'b8\'b6\'c5\'a9\'be\'f7 \'be\'f0\'be\'ee\
- \'c0\'a5\'bf\'a1\'bc\'ad \'bd\'c7\'bd\'c3\'b0\'a3\'c0\'b8\'b7\'ce \'ba\'af\'b0\'e6\'b5\'c7\'b4\'c2 \'bc\'ad\'b9\'f6\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fc\'b4\'de\'c7\'cf\'b4\'c2 \'bf\'eb\'b5\'b5\'b7\'ce \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb - RSS\
- \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae \'bc\'b3\'c1\'a4\'bf\'a1 \'b8\'b9\'c0\'cc \'c0\'cc\'bf\'eb\
\
4) JSON(JavaScript Object Notation)\
\
- \'c0\'da\'b9\'d9 \'bd\'ba\'c5\'a9\'b8\'b3\'c6\'ae\'c0\'c7 \'b0\'b4\'c3\'bc \'c7\'a5\'c7\'f6\'b9\'fd\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c7\'a5\'c7\'f6\'c7\'cf\'b4\'c2 \'b9\'e6\'bd\'c4\
- XML \'ba\'b8\'b4\'d9 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c5\'a9\'b1\'e2\'b0\'a1 \'c0\'db\'bd\'c0\'b4\'cf\'b4\'d9.\
- \'bf\'eb\'b5\'b5\'b4\'c2 XML\'b0\'fa \'b0\'b0\'c1\'f6\'b8\'b8 \'bd\'c7\'bd\'c3\'b0\'a3\'c0\'b8\'b7\'ce \'c0\'da\'c1\'d6 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d8\'be\'df \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'b4\'c2 JSON\'c0\'bb \'b8\'b9\'c0\'cc \'c0\'cc\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
- \'bd\'ba\'b8\'b6\'c6\'ae \'c6\'f9\'bf\'a1\'bc\'ad \'ba\'b8\'b3\'bb\'c1\'f6\'b4\'c2 \'c7\'aa\'bd\'c3 \'b8\'de\'bd\'c3\'c1\'f6\'b0\'a1 JSON\'c0\'b8\'b7\'ce \'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- \'c3\'d6\'b1\'d9\'bf\'a1\'b4\'c2 \'bc\'b3\'c1\'a4 \'c6\'c4\'c0\'cf\'b5\'e9\'b5\'b5 XML \'ba\'b8\'b4\'d9\'b4\'c2 JSON\'c0\'bb \'bc\'b1\'c8\'a3\'c7\'d5\'b4\'cf\'b4\'d9.\
- Android Studio\'b3\'aa Atom \'b0\'b0\'c0\'ba IDE \'b5\'e9\'c0\'ba \'bc\'b3\'c1\'a4\'bf\'a1\'b5\'b5 JSON\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\
2. Open API\
\
- \'b5\'a5\'c0\'cc\'c5\'cd\'b3\'aa \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b8\'a6 \'b4\'d9\'b8\'a5 \'b0\'b3\'b9\'df\'c0\'da\'b0\'a1 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'b8\'b8\'b5\'e7 \'b0\'cd\
\
3. Restful\
\
- \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'d2\'c0\'af\'c7\'cf\'b0\'ed \'c0\'d6\'b4\'c2 \'b0\'f7\'bf\'a1\'bc\'ad \'c8\'ad\'b8\'e9\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee\'c1\'d6\'c1\'f6 \'be\'ca\'b0\'ed \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b4\'c2 \'b0\'cd\
- \'b0\'b3\'b9\'df\'c0\'da\'b5\'e9\'c0\'cc \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b0\'a1\'c1\'ae\'b4\'d9\'b0\'a1 \'c7\'ca\'bf\'e4\'c7\'d1 \'ba\'ce\'ba\'d0\'b8\'b8 \'c3\'df\'c3\'e2\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'c7\'cf\'b4\'c2 \'b0\'cd\
\
** CSV \'c0\'d0\'b1\'e2\
\
- CSV\'b4\'c2 \'c4\'de\'b8\'b6 \'b6\'c7\'b4\'c2 \'b4\'d9\'b8\'a5 \'b1\'b8\'ba\'d0\'c0\'da\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'c8 \'b9\'ae\'c0\'da\'bf\'ad \'c0\'d4\'b4\'cf\'b4\'d9.\
- \'c8\'ae\'c0\'e5\'c0\'da\'b4\'c2 \'c6\'c4\'c0\'cf\'c0\'c7 \'c1\'be\'b7\'f9\'b8\'a6 \'be\'cb\'b7\'c1\'c1\'d6\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'cc\'c1\'f6 \'c8\'ae\'c0\'e5\'c0\'da \'b6\'a7\'b9\'ae\'bf\'a1 \'c6\'c4\'c0\'cf \'c7\'fc\'bd\'c4\'c0\'cc \'c1\'a4\'c7\'d8\'c1\'f6\'c1\'f6\'b4\'c2 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\
- \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce csv\'b6\'f3\'b4\'c2 \'c8\'ae\'c0\'e5\'c0\'da\'b8\'a6 \'b0\'ae\'c1\'f6\'b8\'b8 \'b1\'d7 \'c0\'cc\'bf\'dc\'c0\'c7 \'c8\'ae\'c0\'e5\'c0\'da\'b8\'a6 \'b0\'a1\'c1\'fa \'bc\'f6\'b5\'b5 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- \'ba\'b8\'c5\'eb\'c0\'c7 \'b0\'e6\'bf\'ec csv \'c6\'c4\'c0\'cf\'c0\'bb \'c0\'d0\'c0\'bb \'b6\'a7\'b4\'c2 \'c1\'d9 \'b4\'dc\'c0\'a7\'b7\'ce \'c0\'d0\'be\'ee\'bc\'ad split \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'ba\'d0\'c7\'d2\'c7\'cf\'b8\'e9 \'b5\'c7\'c1\'f6\'b8\'b8 \'c4\'da\'b5\'e5\'b0\'a1 \'ba\'b9\'c0\'e2\'c7\'d8\'c1\'fa\
\'b0\'a1\'b4\'c9\'bc\'ba\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- \'c3\'b9\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'cc \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'ce\'c1\'f6 \'be\'c6\'b4\'cf\'b8\'e9 \'c7\'e0\'c0\'c7 \'c0\'cc\'b8\'a7\'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\'b5\'b5 \'c7\'d8\'be\'df\'c7\'cf\'b0\'ed \'b8\'f0\'b5\'e7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b1\'d5\'b5\'ee\'c7\'cf\'b0\'d4 \'c0\'d6\'b4\'c2\'c1\'f6 \'b1\'d7\'b8\'ae\'b0\'ed \'c0\'da\'b9\'d9 \'b0\'b4\'c3\'bc\'bf\'a1\
\'be\'ee\'b6\'bb\'b0\'d4 \'b4\'e3\'c0\'bb \'b0\'cd\'c0\'ce\'c1\'f6 \'b5\'ee\'c0\'bb \'b0\'ed\'b7\'c1\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
- \'c0\'cc\'b7\'af\'c7\'d1 \'c0\'db\'be\'f7\'c0\'bb \'c6\'ed\'b8\'ae\'c7\'cf\'b0\'d4 \'c7\'cf\'b5\'b5\'b7\'cf \'c7\'d8\'c1\'d6\'b4\'c2 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b0\'a1 supercsv\'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae \'c0\'d4\'b4\'cf\'b4\'d9.\
\
\'bd\'c7\'bd\'c0) \'bf\'dc\'ba\'ce \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed \'c0\'d0\'be\'ee\'bc\'ad \'c0\'fa\'c0\'e5\'c7\'cf\'b1\'e2\
\
1. CSV \'c7\'fc\'bd\'c4\'c0\'c7 \'c6\'c4\'c0\'cf \'b8\'b8\'b5\'e9\'b1\'e2 - \'c7\'f6\'c0\'e7 \'b5\'f0\'b7\'ba\'c5\'e4\'b8\'ae\'bf\'a1 volley.csv\'b7\'ce \'c0\'fa\'c0\'e5\
\
name,age,birthday\
\'b9\'ae\'c3\'a4\'bf\'f8,32,1986-11-13\
\'c7\'d1\'c8\'bf\'c1\'d6,32,1987-02-22\
\'b9\'da\'ba\'b8\'bf\'b5,29,1990-02-12\
\'be\'c6\'c0\'cc\'c0\'af,26,1993-05-16\
\
2. \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'c0\'c7 \'c0\'cc\'b8\'a7\'b0\'fa \'b3\'aa\'c0\'cc\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 DTO \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'bb\'fd\'bc\'ba\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.csv;\
\cf2 import\cf0  java.util.Date;\
\cf2 public\cf0  \cf2 class\cf0  Player \{\
	\cf2 private\cf0  String \cf5 name\cf0 ;\
	\cf2 private\cf0  \cf2 int\cf0  \cf5 age\cf0 ;\
	\cf2 private\cf0  Date \cf5 birthday\cf0 ;\
	\cf2 public\cf0  String getName() \{\cf2 return\cf0  \cf5 name\cf0 ;\}\
	\cf2 public\cf0  \cf2 void\cf0  setName(String \cf3 name\cf0 ) \{\cf2 this\cf0 .\cf5 name\cf0  = \cf3 name\cf0 ;\}\
	\cf2 public\cf0  \cf2 int\cf0  getAge() \{\cf2 return\cf0  \cf5 age\cf0 ;\}\
	\cf2 public\cf0  \cf2 void\cf0  setAge(\cf2 int\cf0  \cf3 age\cf0 ) \{\cf2 this\cf0 .\cf5 age\cf0  = \cf3 age\cf0 ;\}\
	\cf2 public\cf0  Date getBirthday() \{\cf2 return\cf0  \cf5 birthday\cf0 ;\}\
	\cf2 public\cf0  \cf2 void\cf0  setBirthday(Date \cf3 birthday\cf0 ) \{\cf2 this\cf0 .\cf5 birthday\cf0  = \cf3 birthday\cf0 ;\}\
	\cf10 @Override\cf0 \
	\cf2 public\cf0  String toString() \{\
		\cf2 return\cf0  \cf4 "Player [name="\cf0  + \cf5 name\cf0  + \cf4 ", age="\cf0  + \cf5 age\cf0  + \cf4 ", birthday="\cf0  + \cf5 birthday\cf0  + \cf4 "]"\cf0 ;\
	\}\
	\cf2 public\cf0  Player(String \cf3 name\cf0 , \cf2 int\cf0  \cf3 age\cf0 , Date \cf3 birthday\cf0 ) \{\
		\cf2 super\cf0 ();\
		\cf2 this\cf0 .\cf5 name\cf0  = \cf3 name\cf0 ;\
		\cf2 this\cf0 .\cf5 age\cf0  = \cf3 age\cf0 ;\
		\cf2 this\cf0 .\cf5 birthday\cf0  = \cf3 birthday\cf0 ;\
	\}\
	\cf2 public\cf0  Player() \{\
		\cf2 super\cf0 ();\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
3. \'c6\'c4\'c0\'cf\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'bb \'c0\'d0\'be\'ee\'bc\'ad DTO\'c0\'c7 List\'b7\'ce \'b8\'b8\'b5\'e7 \'c8\'c4 \'c3\'e2\'b7\'c2\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.csv;\
\cf2 import\cf0  java.io.BufferedReader;\
\cf2 import\cf0  java.io.FileInputStream;\
\cf2 import\cf0  java.io.InputStreamReader;\
\cf2 import\cf0  java.text.SimpleDateFormat;\
\cf2 import\cf0  java.util.ArrayList;\
\cf2 import\cf0  java.util.Date;\
\cf2 import\cf0  java.util.List;\
\cf2 public\cf0  \cf2 class\cf0  NoLibraryMain \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf11 // \'c6\'c4\'c0\'cf\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'bb \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce \'c0\'d0\'b1\'e2 \'c0\'a7\'c7\'d1 \'bd\'ba\'c6\'ae\'b8\'b2\'c0\'bb \'bb\'fd\'bc\'ba\cf0 \
		\cf2 try\cf0 (BufferedReader \cf3 br\cf0  = \cf2 new\cf0  BufferedReader(\
				\cf2 new\cf0  InputStreamReader(\
						\cf2 new\cf0  FileInputStream(\cf4 "./volley.csv"\cf0 ))))\{\
			\cf11 // \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'b8\'ae\'bd\'ba\'c6\'ae\cf0 \
			List<Player> \cf3 list\cf0  = \cf2 new\cf0  ArrayList<>();\
			\cf11 // \'c3\'b9\'c2\'b0\'c1\'d9\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad \'b8\'b8\'b5\'e7 \'ba\'af\'bc\'f6\cf0 \
			\cf2 boolean\cf0  \cf3 flag\cf0  = \cf2 false\cf0 ;\
			\cf11 // \'c1\'d9 \'b4\'dc\'c0\'a7\'b7\'ce \'c0\'d0\'b1\'e2\cf0 \
			\cf2 while\cf0 (\cf2 true\cf0 ) \{\
				String \cf3 line\cf0  = \cf3 br\cf0 .readLine();\
				\cf2 if\cf0 (\cf3 line\cf0  == \cf2 null\cf0 ) \{\
					\cf2 break\cf0 ;\
				\}\
				\cf11 // \'c3\'b9\'b9\'f8\'c2\'b0\'c1\'d9 \'c1\'d9\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'c6\'c4\'bd\'cc\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bd\cf0 \
				\cf2 if\cf0 (\cf3 flag\cf0  == \cf2 false\cf0 ) \{\
					\cf3 flag\cf0  = \cf2 true\cf0 ;\
					\cf2 continue\cf0 ;\
				\}\
				\cf11 // \'c7\'d1 \'c1\'d9\'c0\'bb \'c0\'d0\'be\'ee\'bc\'ad ,\'b7\'ce \'ba\'d0\'c7\'d2\cf0 \
				String [] \cf3 ar\cf0  = \cf3 line\cf0 .split(\cf4 ","\cf0 );\
				\cf11 // \'c7\'d1 \'c1\'d9\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'fd\'bc\'ba\cf0 \
				Player \cf3 player\cf0  = \cf2 new\cf0  Player();\
				\cf3 player\cf0 .setName(\cf3 ar\cf0 [0]);\
				\cf3 player\cf0 .setAge(Integer.parseInt(\cf3 ar\cf0 [1]));\
				String \cf3 birthday\cf0  = \cf3 ar\cf0 [2];\
				SimpleDateFormat \cf3 sdf\cf0  = \cf2 new\cf0  SimpleDateFormat(\cf4 "yyyy-MM-dd"\cf0 );\
				Date \cf3 date\cf0  = \cf3 sdf\cf0 .parse(\cf3 birthday\cf0 );\
				\cf3 player\cf0 .setBirthday(\cf3 date\cf0 );\
				\cf11 // \'b0\'b4\'c3\'bc\'b8\'a6 \'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'c3\'df\'b0\'a1\cf0 \
				\cf3 list\cf0 .add(\cf3 player\cf0 );\
			\}\
			\cf2 for\cf0 (Player \cf3 player\cf0  : \cf3 list\cf0 ) \{\
				System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 player\cf0 );\
			\}\
			\
		\}\cf2 catch\cf0 (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "\'c6\'c4\'c0\'cf \'c0\'d0\'b1\'e2 \'bf\'b9\'bf\'dc : %s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 Player [name=\'b9\'ae\'c3\'a4\'bf\'f8, age=32, birthday=Thu Nov 13 00:00:00 KST 1986]\
Player [name=\'c7\'d1\'c8\'bf\'c1\'d6, age=32, birthday=Sun Feb 22 00:00:00 KST 1987]\
Player [name=\'b9\'da\'ba\'b8\'bf\'b5, age=29, birthday=Mon Feb 12 00:00:00 KST 1990]\
Player [name=\'be\'c6\'c0\'cc\'c0\'af, age=26, birthday=Sun May 16 00:00:00 KST 1993]\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
=> \'c0\'cc\'b7\'b8\'b0\'d4 \'c1\'f7\'c1\'a2 \'c0\'d0\'b4\'c2 \'b0\'e6\'bf\'ec\'c0\'c7 \'b9\'ae\'c1\'a6\'c1\'a1\
=> \'c3\'b9\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'cc \'c7\'d7\'b8\'f1\'c0\'c7 \'c0\'cc\'b8\'a7\'c0\'cc\'b8\'e9 \'bf\'a1\'b7\'af\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d2 \'b0\'a1\'b4\'c9\'bc\'ba\'c0\'cc \'c0\'d6\'c0\'bd\
=> \'b3\'af\'c2\'a5 \'c7\'fc\'bd\'c4\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'b1\'db\'c0\'da \'bc\'f6\'b8\'a6 \'c1\'f7\'c1\'a2 \'c6\'c4\'be\'c7\'c7\'d8\'bc\'ad \'ba\'af\'b0\'e6 \'c0\'db\'be\'f7\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
4. super-csv\
\
- CellProcessor \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7 \'b9\'e8\'bf\'ad\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c7\'cf\'b3\'aa\'c0\'c7 \'b0\'b4\'c3\'bc\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a6\'be\'e0\'c1\'b6\'b0\'c7\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- Not Null(), ParseInt, ParseDate, StrRegEx \'b5\'ee\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
- ICsvBeanReader \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c6\'c4\'c0\'cf\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'bb \'c0\'d0\'b0\'ed getHeader\'bf\'cd \'b0\'b0\'c0\'ba \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad\
\'c3\'b9\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'c7 \'c7\'ec\'b4\'f5\'bf\'a9\'ba\'ce\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\
\
5. \'c7\'f6\'c0\'e7 \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae\'c0\'c7 pom.xml \'c6\'c4\'c0\'cf\'bf\'a1 super-csv\'c0\'c7 \'c0\'c7\'c1\'b8\'bc\'ba\'c0\'bb \'bc\'b3\'c1\'a4\
\pard\pardeftab720\partightenfactor0
\cf8 <!-- https://mvnrepository.com/artifact/net.sf.supercsv/super-csv -->\cf0 \
\pard\pardeftab720\partightenfactor0
\cf6 <\cf7 dependency\cf6 >\cf0 \
	\cf6 <\cf7 groupId\cf6 >\cf0 net.sf.supercsv\cf6 </\cf7 groupId\cf6 >\cf0 \
	\cf6 <\cf7 artifactId\cf6 >\cf0 super-csv\cf6 </\cf7 artifactId\cf6 >\cf0 \
	\cf6 <\cf7 version\cf6 >\cf0 2.4.0\cf6 </\cf7 version\cf6 >\cf0 \
\cf6 </\cf7 dependency\cf6 >\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
6. main \'b8\'de\'bc\'d2\'b5\'e5\'bf\'a1\'bc\'ad \'c0\'d0\'be\'ee\'b3\'bb\'b4\'c2 \'c4\'da\'b5\'e5\'b8\'a6 \'c0\'db\'bc\'ba\'c7\'d8\'bc\'ad \'bd\'c7\'c7\'e0\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.csv;\
\cf2 import\cf0  java.nio.file.Files;\
\cf2 import\cf0  java.nio.file.Path;\
\cf2 import\cf0  java.nio.file.Paths;\
\cf2 import\cf0  java.util.ArrayList;\
\cf2 import\cf0  java.util.List;\
\cf2 import\cf0  org.supercsv.cellprocessor.ParseDate;\
\cf2 import\cf0  org.supercsv.cellprocessor.ParseInt;\
\cf2 import\cf0  org.supercsv.cellprocessor.constraint.NotNull;\
\cf2 import\cf0  org.supercsv.cellprocessor.ift.CellProcessor;\
\cf2 import\cf0  org.supercsv.io.CsvBeanReader;\
\cf2 import\cf0  org.supercsv.io.ICsvBeanReader;\
\cf2 import\cf0  org.supercsv.prefs.CsvPreference;\
\cf2 public\cf0  \cf2 class\cf0  SuperCsvMain \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf11 // \'c1\'a6\'be\'e0\'c1\'b6\'b0\'c7\'c0\'bb \'bc\'b3\'c1\'a4\cf0 \
		CellProcessor [] \cf3 processors\cf0  = \cf2 new\cf0  CellProcessor[] \{\
			\cf2 new\cf0  NotNull(), \cf11 // \'c0\'cc\'b8\'a7\'c0\'ba \'c7\'ca\'bc\'f6\cf0 \
			\cf2 new\cf0  ParseInt(\cf2 new\cf0  NotNull()), \cf11 // \'c1\'a4\'bc\'f6\'b7\'ce \'ba\'af\'c8\'af\cf0 \
			\cf2 new\cf0  ParseDate(\cf4 "yyyy-MM-dd"\cf0 ) \cf11 // Date\'b7\'ce \'ba\'af\'c8\'af\cf0 \
		\};\
		\cf11 // \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 List \'bb\'fd\'bc\'ba\cf0 \
		List <Player> \cf3 list\cf0  = \cf2 new\cf0  ArrayList<>();\
		\cf11 // \'c6\'c4\'c0\'cf \'b0\'e6\'b7\'ce\'b8\'a6 \'bb\'fd\'bc\'ba\cf0 \
		Path \cf3 path\cf0  = Paths.get(\cf4 "./volley.csv"\cf0 );\
		\cf11 // \'c0\'d0\'b1\'e2\cf0 \
		\cf2 try\cf0 (ICsvBeanReader \cf3 beanReader\cf0  = \cf2 new\cf0  CsvBeanReader(Files.newBufferedReader(\cf3 path\cf0 ),\
				CsvPreference.\cf5 STANDARD_PREFERENCE\cf0 ))\{\
			\cf11 // \'c7\'ec\'b4\'f5 \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2 - \'c3\'b9\'b9\'f8\'c2\'b0 \'c7\'e0\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\cf0 \
			String [] \cf3 header\cf0  = \cf3 beanReader\cf0 .getHeader(\cf2 true\cf0 );\
			\cf11 // \'b5\'ce\'b9\'f8\'c2\'b0 \'c7\'e0 \'ba\'ce\'c5\'cd \'c0\'d0\'be\'ee\'bf\'c0\'b1\'e2\cf0 \
			Player \cf3 player\cf0  = \cf2 null\cf0 ;\
			\cf11 // \'c1\'d9 \'b4\'dc\'c0\'a7\'b7\'ce \'c0\'d0\'be\'ee\'bc\'ad player\'b7\'ce \'b8\'b8\'b5\'e7 \'c8\'c4 list\'bf\'a1 \'c3\'df\'b0\'a1\cf0 \
			\cf2 while\cf0 ((\cf3 player\cf0  = \cf3 beanReader\cf0 .read(Player.\cf2 class\cf0 , \cf3 header\cf0 , \cf3 processors\cf0 )) != \cf2 null\cf0 ) \{\
				\cf3 list\cf0 .add(\cf3 player\cf0 );\
			\}\
			\cf2 for\cf0 (Player \cf3 temp\cf0  : \cf3 list\cf0 ) \{\
				System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 temp\cf0 );\
			\}\
		\}\cf2 catch\cf0 (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "\'c6\'c4\'c0\'cf \'c0\'d0\'b1\'e2 \'bf\'b9\'bf\'dc : %s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 Player [name=\'b9\'ae\'c3\'a4\'bf\'f8, age=32, birthday=Thu Nov 13 00:00:00 KST 1986]\
Player [name=\'c7\'d1\'c8\'bf\'c1\'d6, age=32, birthday=Sun Feb 22 00:00:00 KST 1987]\
Player [name=\'b9\'da\'ba\'b8\'bf\'b5, age=29, birthday=Mon Feb 12 00:00:00 KST 1990]\
Player [name=\'be\'c6\'c0\'cc\'c0\'af, age=26, birthday=Sun May 16 00:00:00 KST 1993]\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** JSON Parsing\
\
1. JSON \'b9\'ae\'b9\'fd\
\
[ ] : JSONArray - \'b9\'e8\'bf\'ad\
\{ \} : JSONObject - \'b0\'b4\'c3\'bc\
\'bc\'d3\'bc\'ba\'b0\'fa \'bc\'d3\'bc\'ba, \'b0\'b4\'c3\'bc\'bf\'cd \'b0\'b4\'c3\'bc\'b8\'a6 \'b1\'b8\'ba\'d0\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'ba : ,(\'c4\'de\'b8\'b6)\
\'bc\'d3\'bc\'ba\'b0\'fa \'b0\'aa\'c0\'bb \'b1\'b8\'ba\'d0\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'ba : <-\'bf\'e4\'b0\'c5\
\
2. JSON \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\
\
1) JSONArray : JSON \'b9\'e8\'bf\'ad\
=> \'bb\'fd\'bc\'ba\'c0\'da\'bf\'a1 JSON \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'b4\'eb\'c0\'d4\'c7\'cf\'b8\'e9 JSONArray \'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'fd\'bc\'ba\
=> [ ]\'b7\'ce \'b9\'ad\'c0\'ce \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'b4\'eb\'c0\'d4\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
JSONObject getJSONObject(int index)\
String getString(int index)\
int getInt(int index)\
int length() : \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6 \'b8\'ae\'c5\'cf\
\
2) JSONObject : JSON \'b0\'b4\'c3\'bc\
=> \'bb\'fd\'bc\'ba\'c0\'da\'bf\'a1 JSON \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'b4\'eb\'c0\'d4\'c7\'cf\'b8\'e9 JSONObject \'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'fd\'bc\'ba\
=> \{ \}\'b7\'ce \'b9\'ad\'c0\'ce \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'b4\'eb\'c0\'d4\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
JSONArray getJSONArray(String key)\
String getString(String key)\
int getInt(String key)\
\
3. Open API \'c8\'b0\'bf\'eb\
\
- \'b4\'eb\'ba\'ce\'ba\'d0\'c0\'c7 Open API\'b4\'c2 \'c8\'b8\'bf\'f8\'b0\'a1\'c0\'d4\'c0\'bb \'c7\'cf\'b0\'ed \'bb\'e7\'bf\'eb\'c7\'cf\'b0\'da\'b4\'d9\'b4\'c2 \'bd\'c5\'c3\'bb\'c0\'bb \'c7\'d8\'bc\'ad API \'c5\'b0\'b8\'a6 \'b9\'de\'be\'c6\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
- API \'c5\'b0\'b8\'a6 \'c1\'d6\'bc\'d2\'c0\'c7 \'b5\'de\'ba\'ce\'ba\'d0\'bf\'a1 \'c3\'df\'b0\'a1\'c7\'d8\'bc\'ad \'bf\'e4\'c3\'bb\'c0\'bb \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'b0\'a1 \'c0\'d6\'b0\'ed header\'bf\'a1 \'c6\'f7\'c7\'d4\'bd\'c3\'c4\'d1\'bc\'ad \'bf\'e4\'c3\'bb\'c0\'bb \'c7\'d8\'be\'df \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'b0\'a1 \'c0\'d6\'c0\'bd\
- \'b0\'f8\'b0\'f8\'b1\'e2\'b0\'fc Open API\'b4\'c2 \'b4\'eb\'ba\'ce\'ba\'d0 key\'b8\'a6 \'c1\'d6\'bc\'d2\'c0\'c7 \'b5\'de\'ba\'ce\'ba\'d0\'bf\'a1 \'c3\'df\'b0\'a1\'c7\'d8\'bc\'ad \'bf\'e4\'c3\'bb\'c7\'cf\'b0\'ed Kakao\'b3\'aa Naver\'b0\'b0\'c0\'ba \'b0\'f7\'c0\'ba \'c7\'ec\'b4\'f5\'bf\'a1\
\'c6\'f7\'c7\'d4\'bd\'c3\'c4\'d1\'bc\'ad \'bf\'e4\'c3\'bb\'c0\'bb \'c7\'d5\'b4\'cf\'b4\'d9.\
\
4. Kakao Open API\'c0\'c7 JSON \'c6\'c4\'bd\'cc\
\
1) \'c5\'b0\'b8\'a6 \'b9\'df\'b1\'de \'b9\'de\'b1\'e2\
\
- developers.kakao.com\'bf\'a1 \'c1\'a2\'bc\'d3\'c7\'cf\'b0\'ed \'b7\'ce\'b1\'d7\'c0\'ce(\'bf\'c0\'b8\'a5\'c2\'ca \'bb\'f3\'b4\'dc)\
- \'be\'db\'b8\'b8\'b5\'e9\'b1\'e2 \'bc\'b1\'c5\'c3 -> \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'bb \'bb\'fd\'bc\'ba \
- \'c0\'a7\'bf\'a1 \'bf\'cf\'b7\'e1 \'c8\'c4 REST API\'c5\'b0\'b8\'a6 \'ba\'b9\'bb\'e7 : \cf12 \cb13 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec12 abfe30c50bf8646b3518958413f646c1\cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
- \'bc\'b3\'c1\'a4 \'b9\'f6\'c6\'b0\'c0\'bb \'c5\'ac\'b8\'af\'c7\'cf\'b0\'ed \'c7\'c3\'b7\'a7\'c6\'fb\'c0\'bb \'c3\'df\'b0\'a1 \'c5\'ac\'b8\'af -> \'c0\'a5 \'c5\'ac\'b8\'af -> \'bb\'e7\'c0\'cc\'c6\'ae \'b5\'b5\'b8\'de\'c0\'ce(http://localhost:8080) - \'bd\'c7\'bd\'c0\'bf\'eb\
- API\'bc\'d2\'b0\'b3 \'c5\'ac\'b8\'af -> REST API \'b0\'b3\'b9\'df\'b0\'a1\'c0\'cc\'b5\'e5\'c0\'c7 \'b0\'cb\'bb\'f6\'c0\'bb \'c5\'ac\'b8\'af -> \'c3\'a5 \'b0\'cb\'bb\'f6 \'bc\'b1\'c5\'c3\
\
2) \'c4\'ab\'c4\'ab\'bf\'c0 \'b5\'b5\'bc\'ad \'b0\'cb\'bb\'f6 API\
\pard\pardeftab720\sl320\partightenfactor0
\cf0 https://dapi.kakao.com/v3/search/book?target=title & query=\'b5\'b5\'bc\'ad\'c1\'a6\'b8\'f1\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'c7\'ec\'b4\'f5\'bf\'a1 \'c0\'ce\'c1\'f5 \'c5\'b0\'b8\'a6 \'c3\'df\'b0\'a1 : Authorization: KakaoAK \'c0\'ce\'c1\'f5\'c5\'b0\
\'b0\'f8\'b0\'f8\'b1\'e2\'b0\'fc \'bf\'c0\'c7\'c2 API\'b4\'c2 \'c0\'ce\'c1\'f5\'c5\'b0\'b8\'a6 \'c1\'d6\'bc\'d2\'bf\'a1 \'c3\'df\'b0\'a1\'c7\'cf\'b4\'c2\'b5\'a5 \'c4\'ab\'c4\'ab\'bf\'c0\'b3\'aa \'b3\'d7\'c0\'cc\'b9\'f6\'b4\'c2 \'ba\'b8\'be\'c8\'c0\'bb \'c0\'a7\'c7\'d8\'bc\'ad \'c1\'d6\'bc\'d2\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3 \
\'c7\'ec\'b4\'f5\'bf\'a1 \'c6\'f7\'c7\'d4\'bd\'c3\'c4\'d1\'bc\'ad \'c0\'fc\'bc\'db\
\
3) JSON \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae \'c0\'c7\'c1\'b8\'bc\'ba\'c0\'bb pom.xml\'bf\'a1 \'c3\'df\'b0\'a1\
\pard\pardeftab720\partightenfactor0
\cf8 <!-- https://mvnrepository.com/artifact/org.json/json -->\cf0 \
\pard\pardeftab720\partightenfactor0
\cf6 <\cf7 dependency\cf6 >\cf0 \
	\ul <groupId>org.json</groupId>\ulnone \
\pard\pardeftab720\partightenfactor0
\cf0 \ul \ulc0 	<artifactId>json</artifactId>\ulnone \
\ul 	<version>20190722</version>\ulnone \
\pard\pardeftab720\partightenfactor0
\cf6 </\cf7 dependency\cf6 >\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
4) main \'b8\'de\'bc\'d2\'b5\'e5\'bf\'a1 \'c0\'db\'bc\'ba\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'ba \'c8\'c4 JSON \'c6\'c4\'bd\'cc\'b1\'ee\'c1\'f6 \'bc\'f6\'c7\'e0\
\
- \'c0\'a5\'c0\'c7 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'bb \'b6\'a7\'b4\'c2 URL \'c5\'ac\'b7\'a1\'bd\'ba\'bf\'cd HttpURLConnection\'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'c0\'cc\'bf\'eb\
- URL\'c0\'cc \'c0\'a5 \'c1\'d6\'bc\'d2\'b8\'a6 \'b8\'b8\'b5\'e5\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'cc\'b0\'ed URLConnection\'c0\'ba \'bd\'c7\'c1\'a6 \'bf\'ac\'b0\'e1\'c7\'d8\'bc\'ad \'bf\'e4\'c3\'bb\'c0\'bb \'c7\'cf\'b0\'ed \'b1\'d7 \'b0\'e1\'b0\'fa\'b8\'a6 \'b9\'de\'be\'c6\'bf\'c0\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\
- URL\'c0\'bb \'b8\'b8\'b5\'e9 \'b6\'a7 \'c7\'d1\'b1\'db\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee \'c0\'d6\'c0\'b8\'b8\'e9 \'c0\'ce\'c4\'da\'b5\'f9\'c7\'d8\'bc\'ad \'b8\'b8\'b5\'e9\'be\'ee\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
- URLEncoder.encode(\'ba\'af\'c8\'af\'c7\'d2\'b9\'ae\'c0\'da\'bf\'ad, \'c0\'ce\'c4\'da\'b5\'f9\'b9\'e6\'bd\'c4)\
- \'be\'c8\'b5\'e5\'b7\'ce\'c0\'cc\'b5\'e5\'bf\'a1\'bc\'ad \'c0\'a7\'c0\'c7 \'c0\'db\'be\'f7\'c0\'bb \'c7\'d2 \'b6\'a7\'b4\'c2 \'bd\'ba\'b7\'b9\'b5\'e5\'b8\'a6 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
- \'be\'c8\'b5\'e5\'b7\'ce\'c0\'cc\'b5\'e5\'bf\'a1\'bc\'ad\'b4\'c2 \'b3\'d7\'c6\'ae\'bf\'f6\'c5\'a9 \'c0\'db\'be\'f7\'c0\'bb \'c7\'d2 \'b6\'a7 \'bd\'ba\'b7\'b9\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'bf\'a1\'b7\'af\
\
- Authentication(\'c0\'ce\'c1\'f5) : \'b7\'ce\'b1\'d7\'c0\'ce\
- Authorization(\'c0\'ce\'b0\'a1) : \'b1\'c7\'c7\'d1\
\
\'bd\'c7\'bd\'c0) JSON Paring \'bf\'ac\'bd\'c0\
\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.json;\
\cf2 import\cf0  java.io.BufferedReader;\
\cf2 import\cf0  java.io.InputStreamReader;\
\cf2 import\cf0  java.net.HttpURLConnection;\
\cf2 import\cf0  java.net.URL;\
\cf2 import\cf0  java.net.URLEncoder;\
\cf2 import\cf0  org.json.JSONArray;\
\cf2 import\cf0  org.json.JSONObject;\
\cf2 public\cf0  \cf2 class\cf0  JSONMain \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf11 // \'c0\'a5\'c0\'c7 \'b9\'ae\'c0\'da\'bf\'ad \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\cf0 \
		String \cf3 json\cf0  = \cf4 ""\cf0 ;\
		\cf2 try\cf0  \{\
			\cf11 // \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'bb \'c1\'d6\'bc\'d2 \'bb\'fd\'bc\'ba\cf0 \
			String \cf3 addr\cf0  = \cf4 "https://dapi.kakao.com/v3/search/book?target=title&query="\cf0 \
					+ URLEncoder.encode(\cf4 "\'bb\'ef\'b1\'b9\'c1\'f6"\cf0 , \cf4 "utf8"\cf0 );\
			URL \cf3 url\cf0  = \cf2 new\cf0  URL(\cf3 addr\cf0 );\
			\cf11 // \'bf\'ac\'b0\'e1 \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\cf0 \
			HttpURLConnection \cf3 con\cf0  = (HttpURLConnection)\cf3 url\cf0 .openConnection();\
			\cf11 // \'bf\'c9\'bc\'c7 \'bc\'b3\'c1\'a4\cf0 \
			\cf11 // \'c3\'d6\'b4\'eb 30\'c3\'ca\'b5\'bf\'be\'c8 \'bf\'ac\'b0\'e1\'c0\'bb \'bd\'c3\'b5\'b5\cf0 \
			\cf3 con\cf0 .setConnectTimeout(30000);\
			\cf11 // \'c7\'ec\'b4\'f5 \'bc\'b3\'c1\'a4\cf0 \
			\cf3 con\cf0 .addRequestProperty(\cf4 "Authorization"\cf0 , \cf4 "KakaoAK abfe30c50bf8646b3518958413f646c1"\cf0 );\
			\cf11 // \'c0\'a5\'bf\'a1\'bc\'ad \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c0\'d0\'be\'ee\'bf\'c3 \'bd\'ba\'c6\'ae\'b8\'b2 \'bb\'fd\'bc\'ba\cf0 \
			BufferedReader \cf3 br\cf0  = \cf2 new\cf0  BufferedReader(\cf2 new\cf0  InputStreamReader(\cf3 con\cf0 .getInputStream()));\
			\cf11 // \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c0\'cf\'bd\'c3\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'d2 \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\cf0 \
			StringBuilder \cf3 sb\cf0  = \cf2 new\cf0  StringBuilder();\
			\cf2 while\cf0 (\cf2 true\cf0 ) \{\
				String \cf3 line\cf0  = \cf3 br\cf0 .readLine();\
				\cf2 if\cf0 (\cf3 line\cf0  == \cf2 null\cf0 ) \{\
					\cf2 break\cf0 ;\
				\}\
				\cf3 sb\cf0 .append(\cf3 line\cf0  + \cf4 "\\n"\cf0 );\
			\}\
			\cf11 // \'b9\'ae\'c0\'da\'bf\'ad \'ba\'af\'bc\'f6\'bf\'a1 \'b4\'eb\'c0\'d4\cf0 \
			\cf3 json\cf0  = \cf3 sb\cf0 .toString();\
			System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 json\cf0 );\
			\
		\}\cf2 catch\cf0 (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
		\cf11 // \'c6\'c4\'bd\'cc\cf0 \
		\cf2 try\cf0  \{\
			\cf11 // \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'ba \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb JSON \'b0\'b4\'c3\'bc\'b7\'ce \'ba\'af\'c8\'af\cf0 \
			JSONObject \cf3 data\cf0  = \cf2 new\cf0  JSONObject(\cf3 json\cf0 );\
			\cf11 // documents \'b6\'f3\'b4\'c2 \'c5\'b0\'c0\'c7 \'b0\'aa\'c0\'bb JSONArray\'b7\'ce \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\cf0 \
			JSONArray \cf3 documents\cf0  = \cf3 data\cf0 .\ul getJSONArray\ulnone (\cf4 "documents"\cf0 );\
			\cf11 // \'b9\'e8\'bf\'ad\'c0\'bb \'bc\'f8\'c8\'b8\cf0 \
			\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0 =0; \cf3 i\cf0 <\cf3 documents\cf0 .length(); \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
				JSONObject \cf3 item\cf0  = \cf3 documents\cf0 .getJSONObject(\cf3 i\cf0 );\
				JSONArray \cf3 authors\cf0  = \cf3 item\cf0 .getJSONArray(\cf4 "authors"\cf0 );\
				System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 authors\cf0 );\
			\}			\
		\}\cf2 catch\cf0 (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "JSON \'c6\'c4\'bd\'cc \'bf\'b9\'bf\'dc : %s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\'b0\'e1\'b0\'fa)\
\'b0\'e1\'b0\'fa\'b4\'c2 \'b3\'ca\'b9\'ab \'b1\'e6\'be\'ee\'bc\'ad \'bb\'fd\'b7\'ab - \'b3\'aa\'b0\'fc\'c1\'df \'c0\'fa\'c0\'da\'b0\'a1 \'b8\'d5\'c0\'fa \'b6\'df\'b8\'e9\'b5\'ca\
\pard\pardeftab720\partightenfactor0
\cf0 ["\'b3\'aa\'b0\'fc\'c1\'df"]\
["\'b0\'ed\'bf\'ec\'bf\'b5"]\
["\'b3\'aa\'b0\'fc\'c1\'df"]\
["\'b8\'b6\'bb\'e7\'c5\'e4\'b3\'a2"]\
["\'c0\'e5\'bf\'ac"]\
["\'b3\'aa\'b0\'fc\'c1\'df"]\
["\'b3\'aa\'b0\'fc\'c1\'df"]\
["\'b3\'aa\'b0\'fc\'c1\'df"]\
["\'b3\'aa\'b0\'fc\'c1\'df"]\
["\'b3\'aa\'b0\'fc\'c1\'df"]\
\
\'bd\'c7\'bd\'c0) JSON \'c6\'c4\'bd\'cc \'bf\'ac\'bd\'c0\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 => json api \'c1\'d6\'bc\'d2\
http://swiftapi.rubypaper.co.kr:2029/hoppin/movies?version=1&page=1&count=20&genreId=&order=releaseddatease\
=> \'bf\'b5\'c8\'ad\'c1\'a6\'b8\'f1(title) \'b0\'fa \'c6\'f2\'c1\'a1(ratingAverage) \'c0\'c7 \'b0\'aa\'c0\'bb \'b0\'a1\'c1\'ae\'bf\'cd\'bc\'ad \'c3\'e2\'b7\'c2 - \'c5\'a9\'b7\'d2\'bf\'a1 \'c1\'d6\'bc\'d2 \'ba\'b9\'bb\'e7\'c7\'d8\'bc\'ad \'b8\'d5\'c0\'fa \'bb\'ec\'c6\'ec\'ba\'b8\'b1\'e2\
\pard\pardeftab720\partightenfactor0
\cf2 package\cf0  com.naver.choch92.json;\
\cf2 import\cf0  java.io.BufferedReader;\
\cf2 import\cf0  java.io.InputStreamReader;\
\cf2 import\cf0  java.net.HttpURLConnection;\
\cf2 import\cf0  java.net.URL;\
\cf2 import\cf0  org.json.JSONArray;\
\cf2 import\cf0  org.json.JSONObject;\
\cf2 public\cf0  \cf2 class\cf0  JSONMain2 \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf11 // \'c0\'a5\'c0\'c7 \'b9\'ae\'c0\'da\'bf\'ad \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\cf0 \
		String \cf3 json\cf0  = \cf4 ""\cf0 ;\
		\cf2 try\cf0  \{\
			\cf11 // \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5 \'b9\'de\'c0\'bb \'c1\'d6\'bc\'d2 \'bb\'fd\'bc\'ba\cf0 \
			String \cf3 addr\cf0  = \cf4 "http://swiftapi.rubypaper.co.kr:2029/hoppin/movies?version=1&page=1&"\cf0 \
					+ \cf4 "count=20&genreId=&order=releaseddatease"\cf0 ;\
			URL \cf3 url\cf0  = \cf2 new\cf0  URL(\cf3 addr\cf0 );\
			\cf11 // \'bf\'ac\'b0\'e1 \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\cf0 \
			HttpURLConnection \cf3 con\cf0  = (HttpURLConnection) \cf3 url\cf0 .openConnection();\
			\cf11 // \'bf\'c9\'bc\'c7 \'bc\'b3\'c1\'a4\cf0 \
			\cf11 // \'c3\'d6\'b4\'eb 30\'c3\'ca\'b5\'bf\'be\'c8 \'bf\'ac\'b0\'e1\'c0\'bb \'bd\'c3\'b5\'b5\cf0 \
			\cf3 con\cf0 .setConnectTimeout(30000);\
			\cf11 // \'c7\'ec\'b4\'f5 \'bc\'b3\'c1\'a4\cf0 \
			\cf3 con\cf0 .addRequestProperty(\cf4 "Authorization"\cf0 , \cf4 "KakaoAK abfe30c50bf8646b3518958413f646c1"\cf0 );\
			\cf11 // \'c0\'a5\'bf\'a1\'bc\'ad \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c0\'d0\'be\'ee\'bf\'c3 \'bd\'ba\'c6\'ae\'b8\'b2 \'bb\'fd\'bc\'ba\cf0 \
			BufferedReader \cf3 br\cf0  = \cf2 new\cf0  BufferedReader(\cf2 new\cf0  InputStreamReader(\cf3 con\cf0 .getInputStream()));\
			\cf11 // \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c0\'cf\'bd\'c3\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'d2 \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\cf0 \
			StringBuilder \cf3 sb\cf0  = \cf2 new\cf0  StringBuilder();\
			\cf2 while\cf0  (\cf2 true\cf0 ) \{\
				String \cf3 line\cf0  = \cf3 br\cf0 .readLine();\
				\cf2 if\cf0  (\cf3 line\cf0  == \cf2 null\cf0 ) \{\
					\cf2 break\cf0 ;\
				\}\
				\cf3 sb\cf0 .append(\cf3 line\cf0  + \cf4 "\\n"\cf0 );\
			\}\
			\cf11 // \'b9\'ae\'c0\'da\'bf\'ad \'ba\'af\'bc\'f6\'bf\'a1 \'b4\'eb\'c0\'d4\cf0 \
			\cf3 json\cf0  = \cf3 sb\cf0 .toString();\
			System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 json\cf0 );\
\
		\} \cf2 catch\cf0  (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "%s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
		\cf11 // \'c6\'c4\'bd\'cc\cf0 \
		\cf2 try\cf0  \{\
			JSONObject \cf3 data\cf0  = \cf2 new\cf0  JSONObject(\cf3 json\cf0 );\
			JSONObject \cf3 hoppin\cf0  = \cf3 data\cf0 .getJSONObject(\cf4 "hoppin"\cf0 );\
			JSONObject \cf3 movies\cf0  = \cf3 hoppin\cf0 .getJSONObject(\cf4 "movies"\cf0 );\
			JSONArray \cf3 movie\cf0  = \cf3 movies\cf0 .getJSONArray(\cf4 "movie"\cf0 );\
			\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0  = 0; \cf3 i\cf0 <\cf3 movie\cf0 .length(); \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
				JSONObject \cf3 item\cf0  = \cf3 movie\cf0 .getJSONObject(\cf3 i\cf0 );\
				System.\cf5 out\cf0 .printf(\cf4 "%s:%s\\n"\cf0 , \cf3 item\cf0 .getString(\cf4 "title"\cf0 ), \cf3 item\cf0 .getString(\cf4 "ratingAverage"\cf0 ));\
			\}\
		\} \cf2 catch\cf0  (Exception \cf3 e\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf4 "JSON \'c6\'c4\'bd\'cc \'bf\'b9\'bf\'dc : %s\\n"\cf0 , \cf3 e\cf0 .getMessage());\
			\cf3 e\cf0 .printStackTrace();\
		\}\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'c4\'a3\'c1\'a4\'be\'f6\'b8\'b6:9.2\
\'c6\'f7\'bd\'ba\'c4\'ab\'c0\'ce\'b5\'e5:7.3\
\'c7\'e0\'ba\'b9\'c7\'d1 \'bf\'ef\'b8\'aa\'c0\'ce:4\
\'c7\'e3\'c6\'ae \'b7\'ce\'c4\'bf:8.4\
\'bc\'d2\'b3\'e2\'c0\'ba \'bf\'ef\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9:6.4\
\'be\'c6\'b1\'e2\'bf\'cd \'b3\'aa:8.6\
\'c7\'d0\'bf\'f8\'b1\'ab\'b4\'e3:6\
625\'c7\'d1\'b1\'b9\'c0\'fc\'c0\'ef-3\'c6\'ed(\'b5\'bf\'ba\'ce\'c0\'fc\'bc\'b1\'c0\'c7 \'b0\'ed\'c1\'f6\'bf\'a1\'b5\'b5 \'b2\'c9\'c0\'ba \'c7\'c7\'b4\'c2\'b0\'a1!):6.3\
625\'c7\'d1\'b1\'b9\'c0\'fc\'c0\'ef-2\'c6\'ed(\'c1\'df\'b1\'b9\'b1\'ba\'c0\'c7 \'b0\'b3\'c0\'d4\'b0\'fa \'c0\'e5\'c1\'f8\'c8\'a3 \'c0\'fc\'c5\'f5):7.2\
\'b8\'c5\'c6\'ae\'b8\'af\'bd\'ba 3 : \'b7\'b9\'ba\'bc\'b7\'e7\'bc\'c7:8.9\
\'b6\'f3\'bd\'ba\'c6\'ae\'bf\'a2\'bc\'d2\'bd\'c3\'c1\'f2:6.4\
\'b9\'cc\'c0\'cc\'b6\'f3:8.8\
\'b9\'cc\'c0\'cc\'b6\'f3 2:8.6\
\'c7\'e6\'c5\'a9:9.1\
\'c7\'aa\'bd\'c3:7.6\
\'c5\'a9\'b7\'a2:7.6\
\'c0\'e8\'be\'d6\'bd\'ba 3D:8.8\
\'bb\'ef\'b1\'b9\'c1\'f6 - \'bf\'eb\'c0\'c7 \'ba\'ce\'c8\'b0:8\
\'be\'c6\'b4\'f5\'bf\'cd \'b9\'cc\'b4\'cf\'b8\'f0\'c0\'cc 2 : \'bc\'bf\'b7\'b9\'b4\'cf\'be\'c6 \'b0\'f8\'c1\'d6 \'b1\'b8\'c3\'e2 \'c0\'db\'c0\'fc:7.9\
\'b9\'bb \'b6\'c7 \'b1\'d7\'b7\'b8\'b0\'d4\'b1\'ee\'c1\'f6:8.5\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
Source Code(\'b0\'ed\'b1\'de \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'be\'f0\'be\'ee\'b7\'ce \'c0\'db\'bc\'ba\'c7\'d1 \'c5\'d8\'bd\'ba\'c6\'ae)\
\
Compile(\'b0\'ed\'b1\'de \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'be\'f0\'be\'ee\'b7\'ce \'c0\'db\'bc\'ba\'c7\'d1 \'bc\'d2\'bd\'ba \'c4\'da\'b5\'e5\'b0\'a1 \'b9\'ae\'b9\'fd\'bf\'a1 \'b8\'c2\'b0\'d4 \'c0\'db\'bc\'ba\'b5\'c7\'be\'fa\'b4\'c2\'c1\'f6 \'b0\'cb\'bb\'e7\'b8\'a6 \'c7\'cf\'b0\'ed \'b8\'c2\'b0\'d4 \'c0\'db\'bc\'ba\'b5\'c7\'be\'fa\'b4\'d9\'b8\'e9\
Virtual Machine \'c0\'cc\'b3\'aa \'be\'ee\'bc\'c0\'ba\'ed\'b7\'af\'b0\'a1 \'c0\'cc\'c7\'d8\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'c4\'da\'b5\'e5\'b7\'ce \'ba\'af\'b0\'e6 - \'c0\'da\'b9\'d9\'b4\'c2 Virtual Machine\'c0\'cc \'c0\'cc\'c7\'d8\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'c1\'df\'b0\'a3 \'c4\'da\'b5\'e5\'c0\'ce\
class\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.)\
\
Linking(\'c7\'ca\'bf\'e4\'c7\'d1 \'b6\'f3\'c0\'cc\'ba\'ea\'b7\'af\'b8\'ae\'b5\'e9\'b0\'fa \'b3\'bb\'b0\'a1 \'b8\'b8\'b5\'e7 \'c4\'da\'b5\'e5\'b5\'e9\'c0\'bb \'bf\'ac\'b0\'e1)\
\
Build(\'bd\'c7\'c7\'e0 \'b0\'a1\'b4\'c9\'c7\'d1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee \'c1\'d6\'b4\'c2 \'b0\'cd)\
\
Load(\'bd\'c7\'c7\'e0 \'b0\'a1\'b4\'c9\'c7\'d1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb \'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1 \'c0\'fb\'c0\'e7)\
\
Run(\'bd\'c7\'c7\'e0)\
\
=> \'c4\'da\'b5\'e5\'bf\'a1\'b4\'c2 \'bf\'a1\'b7\'af\'b0\'a1 \'be\'f8\'b4\'c2\'b5\'a5 \'bd\'c7\'c7\'e0\'c0\'cc \'be\'c8\'b5\'c7\'b0\'c5\'b3\'aa \'ba\'af\'b0\'e6\'b5\'c8 \'b0\'e1\'b0\'fa\'b0\'a1 \'b9\'dd\'bf\'b5\'c0\'cc \'be\'c8\'b5\'c7\'b8\'e9 Rebuild\'b8\'a6 \'c7\'cf\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9.}